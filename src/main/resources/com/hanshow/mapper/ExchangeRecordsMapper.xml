<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hanshow.mapper.ExchangeRecordsMapper">
	<resultMap id="BaseResultMap" type="com.hanshow.entity.ExchangeRecords">
		<result column="Id" property="id" jdbcType="INTEGER" />
		<result column="MemberId" property="memberId" jdbcType="INTEGER" />
		<result column="GoodsId" property="goodsId" jdbcType="INTEGER" />
		<result column="ExchangeCount" property="exchangeCount"
			jdbcType="INTEGER" />
		<result column="ExpenseIntegral" property="expenseIntegral"
			jdbcType="INTEGER" />
		<result column="AddUserId" property="addUserId" jdbcType="INTEGER" />
		<result column="AddTime" property="addTime" jdbcType="TIMESTAMP" />
		<result column="UpdateTime" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="Status" property="status" jdbcType="INTEGER" />
		<result column="Name" property="name" jdbcType="VARCHAR" />
		<!-- 可兑换表 中字段 -->
		<result column="ChannelType" property="channeltype" jdbcType="INTEGER" />
		<result column="ChannelCode" property="channelcode" jdbcType="VARCHAR" />
		<result column="StoreId" property="storeId" jdbcType="INTEGER" />
	</resultMap>
	<insert id="insert" parameterType="com.hanshow.entity.ExchangeRecords" keyProperty="id">
		insert into exchange_records
		(MemberId, GoodsId,
		ExchangeCount, ExpenseIntegral, AddUserId,
		AddTime,
		UpdateTime,ChannelType,ChannelCode,StoreId)
		values
		(#{memberId,jdbcType=INTEGER},
		#{goodsId,jdbcType=INTEGER},
		#{exchangeCount,jdbcType=INTEGER},
		#{expenseIntegral,jdbcType=INTEGER}, #{addUserId,jdbcType=INTEGER},
		#{addTime,jdbcType=TIMESTAMP},
		#{updateTime,jdbcType=TIMESTAMP},#{channeltype,jdbcType=INTEGER},#{channelcode,jdbcType=VARCHAR},#{storeId,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.hanshow.entity.ExchangeRecords">
		insert into exchange_records
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="memberId != null">
				MemberId,
			</if>
			<if test="goodsId != null">
				GoodsId,
			</if>
			<if test="exchangeCount != null">
				ExchangeCount,
			</if>
			<if test="expenseIntegral != null">
				ExpenseIntegral,
			</if>
			<if test="addUserId != null">
				AddUserId,
			</if>
			<if test="addTime != null">
				AddTime,
			</if>
			<if test="updateTime != null">
				UpdateTime,
			</if>
			<if test="channeltype != null">
				Channeltype,
			</if>
			<if test="channelcode != null">
				Channelcode,
			</if>
			<if test="storeId != null">
				StoreId,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="memberId != null">
				#{memberId,jdbcType=INTEGER},
			</if>
			<if test="goodsId != null">
				#{goodsId,jdbcType=INTEGER},
			</if>
			<if test="exchangeCount != null">
				#{exchangeCount,jdbcType=INTEGER},
			</if>
			<if test="expenseIntegral != null">
				#{expenseIntegral,jdbcType=INTEGER},
			</if>
			<if test="addUserId != null">
				#{addUserId,jdbcType=INTEGER},
			</if>
			<if test="addTime != null">
				#{addTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="channeltype != null">
				#{channeltype,jdbcType=INTEGER},
			</if>
			<if test="channelcode != null">
				#{channelcode,jdbcType=VARCHAR},
			</if>
			<if test="storeId != null">
				#{storeId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="selectForPage" parameterType="com.hanshow.entity.ExchangeRecords"
		resultMap="BaseResultMap">
		select r.*,g.Name from exchange_records r left join exchangeable_goods
		g on r.GoodsId=g.Id
		<where>
			<if test="id != null">
				and r.Id=#{id,jdbcType=INTEGER}
			</if>
			<if test="memberId != null">
				and r.MemberId= #{memberId,jdbcType=VARCHAR}
			</if>
			<if test="goodsId != null">
				and r.GoodsId= #{goodsId,jdbcType=Integral}
			</if>
			<if test="exchangeCount != null">
				and r.ExchangeCount =#{exchangeCount,jdbcType=INTEGER}
			</if>
			<if test="expenseIntegral != null">
				and
				r.ExpenseIntegral=#{expenseIntegral,jdbcType=INTEGER}
			</if>
			<if test="addUserId != null">
				and r.AddUserId=#{addUserId,jdbcType=INTEGER}
			</if>
			<if test="channeltype != null">
				and r.ChannelType=#{channeltype,jdbcType=INTEGER}
			</if>
			<if test="channelcode != null">
				and r.ChannelCode=#{channelcode,jdbcType=VARCHAR}
			</if>
			<if test="storeId != null">
				and r.StoreId=#{storeId,jdbcType=INTEGER}
			</if>
			<if test="startTime!=null">
				and r.UpdateTime &gt;={#startTime,jdbcType=Date}
			</if>
			<if test="endTime!=null">
				and r.UpdateTime &lt;={#endTime,jdbcType=Date}
			</if>
			and r.Status=1
		</where>
	</select>
	<select id="selectAll" parameterType="com.hanshow.entity.ExchangeRecords"
		resultMap="BaseResultMap">
		select r.*,g.Name from exchange_records r left join exchangeable_goods
		g on r.GoodsId=g.Id
		<where>
			<if test="id != null">
				and r.Id=#{id,jdbcType=INTEGER}
			</if>
			<if test="memberId != null">
				and r.MemberId= #{memberId,jdbcType=VARCHAR}
			</if>
			<if test="goodsId != null">
				and r.GoodsId= #{goodsId,jdbcType=Integral}
			</if>
			<if test="exchangeCount != null">
				and r.ExchangeCount =#{exchangeCount,jdbcType=INTEGER}
			</if>
			<if test="expenseIntegral != null">
				and
				r.ExpenseIntegral=#{expenseIntegral,jdbcType=INTEGER}
			</if>
			<if test="addUserId != null">
				and r.AddUserId=#{addUserId,jdbcType=INTEGER}
			</if>
			<if test="channeltype != null">
				and r.ChannelType=#{channeltype,jdbcType=INTEGER}
			</if>
			<if test="channelcode != null">
				and r.ChannelCode=#{channelcode,jdbcType=VARCHAR}
			</if>
			<if test="storeId != null">
				and r.StoreId=#{storeId,jdbcType=INTEGER}
			</if>
			<if test="startTime!=null">
				and r.UpdateTime &gt;={#startTime,jdbcType=Date}
			</if>
			<if test="endTime!=null">
				and r.UpdateTime &lt;={#endTime,jdbcType=Date}
			</if>
			and r.Status=1
		</where>
	</select>
	<update id="updateStatus" parameterType="Integer">
		update exchange_records set Status=1 , UpdateTime=now()
		where Id=#{0};
	</update>
	<delete id="delete" parameterType="Integer">
		delete from exchange_records
		where Id=#{0};
	</delete>
</mapper>